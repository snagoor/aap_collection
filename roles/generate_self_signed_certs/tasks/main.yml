---
# tasks file for generate_self_signed_certs
- name: Ensure python cryptography package is installed
  ansible.builtin.package:
    name: python3-cryptography
    state: present

- name: Create a directory to store certs
  ansible.builtin.file:
    path: "{{ ssl_certs_path }}"
    state: directory
    recurse: true
    owner: root
    group: root
    mode: 0755

- name: Create private key
  community.crypto.openssl_privatekey:
    path: "{{ ssl_certs_path }}/{{ ansible_hostname }}.key"

- name: Create certificate signing request (CSR) for SSL certificate
  community.crypto.openssl_csr_pipe:
    privatekey_path: "{{ ssl_certs_path }}/{{ ansible_hostname }}.key"
    common_name: "{{ ansible_fqdn }}"
    use_common_name_for_san: true
    basic_constraints_critical: true
    basic_constraints:
      - 'CA:TRUE'
    key_usage:
      - digitalSignature
      - keyEncipherment
    key_usage_critical: true
    extendedKeyUsage:
      - clientAuth
      - serverAuth
  register: cert_csr

- name: Create self-signed SSL certificate from CSR
  community.crypto.x509_certificate:
    path: "{{ ssl_certs_path }}/{{ ansible_hostname }}.crt"
    csr_content: "{{ cert_csr['csr'] }}"
    privatekey_path: "{{ ssl_certs_path }}/{{ ansible_hostname }}.key"
    provider: selfsigned
    owner: root
    group: root
    mode: 0644

- name: Find cert and key files
  ansible.builtin.find:
    paths: "{{ ssl_certs_path }}"
    patterns:
      - "*.crt"
      - "*.key"
  register: cert_and_key

- name: Ensure previous certificate file is removed
  ansible.builtin.file:
    path: /etc/pki/tls/private/{{ ansible_hostname }}.pem
    state: absent

- name: Concatenate files
  ansible.builtin.slurp:
    src: "{{ item }}"
  loop: "{{ cert_and_key['files'] | map(attribute='path') | list }}"
  register: concat_file

- name: Copy all certs content
  ansible.builtin.lineinfile:
    line: "{{ item['content'] | b64decode }}"
    path: /etc/pki/tls/private/{{ ansible_hostname }}.pem
    firstmatch: true
    create: true
    search_string: "{{ item['content'] | b64decode }}"
    state: present
  loop: "{{ concat_file['results'] }}"
  loop_control:
    label: "{{ item['source'] }}"

- name: Remove empty lines from the file
  ansible.builtin.command: bash -c "sed -i '/^$/d' /etc/pki/tls/private/{{ ansible_hostname }}.pem"
