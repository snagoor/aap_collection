---
# tasks file for rhsso
- name: Enable required repos for Red Hat SSO installation
  community.general.rhsm_repository:
    name: "{{ item }}"
  loop: "{{ rhsso_repos }}"

- name: Install rhsso package group
  ansible.builtin.dnf:
    name: "@rh-sso7"
    state: present

- name: Check existense of Red Hat SSO Java KeyStore file
  ansible.builtin.stat:
    path: /opt/rh/rh-sso7/root/usr/share/keycloak/standalone/configuration/rhsso.jks
  register: keystore_file

- name: Generate HTTPS for the Red Hat SSO server
  ansible.builtin.command: >
    keytool -genkey -alias {{ ansible_fqdn }}
    -keyalg RSA -keystore /opt/rh/rh-sso7/root/usr/share/keycloak/standalone/configuration/rhsso.jks
    -dname "CN={{ ansible_fqdn }}, OU={{ rhsso_ssl_ou |default ('IT') }}, O={{ rhsso_ssl_org | default('Red Hat') }},
    L={{ rhsso_ssl_location | default('Pune') }}, S={{ rhsso_ssl_state | default('Maharashtra') }}, C={{ rhsso_ssl_country | default('IN') }}"
    -keypass {{ rhsso_ssl_password }} -storepass {{ rhsso_ssl_password }}
    -validity {{ rhsso_ssl_validity | default('3650') }} -deststoretype {{ rhsso_dest_store_type | default('pkcs12') }}
    -keysize {{ rhsso_ssl_keysize | default('4096') }}
  when: not keystore_file['stat']['exists']

- name: Generate Red Hat SSO standalone configuration
  ansible.builtin.template:
    src: standalone.xml
    dest: /opt/rh/rh-sso7/root/usr/share/keycloak/standalone/configuration/standalone.xml
    owner: root
    group: root
    mode: 0644
  notify: restart rhsso service

- name: Add Red Hat SSO bin directory to PATH variable
  ansible.builtin.lineinfile:
    line: "export PATH=$PATH:/opt/rh/rh-sso7/root/usr/share/keycloak/bin"
    dest: "{{ ansible_env['HOME'] }}/.bashrc"

- name: Check existense of user authentication file
  ansible.builtin.stat:
    path: /opt/rh/rh-sso7/root/usr/share/keycloak/standalone/configuration/keycloak-add-user.json
  register: rhsso_users_file

- name: Check if user exists in authentication file
  ansible.builtin.command: >
    bash -c "grep {{ rhsso_admin_user | default('admin') }} /opt/rh/rh-sso7/root/usr/share/keycloak/standalone/configuration/keycloak-add-user.json"
  register: check_rhsso_user
  when: rhsso_users_file['stat']['exists']

- name: Create admin user
  ansible.builtin.command: >
    bash -c "source {{ ansible_env['HOME'] }}/.bashrc; add-user-keycloak.sh -u {{ rhsso_admin_user | default('admin') }} -p {{ rhsso_admin_password }}"
  no_log: true
  when: >
    ((not rhsso_users_file['stat']['exists']) or
    (check_rhsso_user is defined and check_rhsso_user['rc'] != 0))

- name: Create Red Hat SSO systemd service configuration file
  ansible.builtin.template:
    src: rhsso.service.j2
    dest: /etc/systemd/system/rhsso.service
    owner: root
    group: root
    mode: 0644
  register: rhsso_service_file

- name: Reload systemd configuration
  ansible.builtin.systemd:
    daemon_reload: yes
  when: rhsso_service_file['changed']

- name: Start and Enable Red Hat SSO service
  ansible.builtin.service:
    name: rhsso
    state: started
    enabled: true
